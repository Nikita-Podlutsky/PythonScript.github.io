/* Глобальные стили */
:root {
        --bg-color: #0f1116; /* Установлен цвет фона по умолчанию для темной темы. Это как главная переменная для цвета фона! */
        --bg-color-light: #141824; /* Еще один цвет фона, но немного светлее. Может использоваться для разных блоков. */
        --bg-color-lighter: #1a1f2e; /* И еще светлее! Видимо, для совсем светлых участков. */
        --text-color: #e1e7ff; /* Основной цвет текста, чтобы хорошо читался на темном фоне. */
        --text-color-muted: #a0a8c7; /* Цвет для текста, который не так важен, например, подписи или второстепенная информация. Он немного бледнее. */
        --accent-color: #4f78fe; /* Главный цвет акцента на сайте. Обычно используется для кнопок или выделения важных элементов. */
        --accent-color-hover: #637dfd; /* Цвет акцента при наведении мышки. Это делает элементы более интерактивными. */
        --border-radius: 8px; /* Скругление углов у разных блоков и элементов. Чем больше значение, тем круглее уголки. */
        font-size: 0.9rem; /* Размер шрифта по умолчанию для всего сайта. rem - это относительная единица, чтобы размер шрифта подстраивался. */
      }
      
      /* Медиа-запросы для адаптивности */
      @media (max-width: 992px) {
        /* Этот блок стилей применяется, когда ширина экрана становится 992 пикселя или меньше. Это для больших планшетов и маленьких ноутбуков. */
        .about__content {
          flex-direction: column; /* Контейнер с информацией "О себе" перестраивается в колонку, чтобы лучше смотреться на узких экранах. */
          text-align: center; /* Текст внутри этого блока выравнивается по центру. */
        }
      
        .about__photo {
          flex: 0 0 250px; /* Фотография "О себе" занимает фиксированную ширину в 250 пикселей и не сжимается/растягивается. */
          margin: 0 auto 30px; /* Убираем отступы по бокам (auto) и добавляем нижний отступ в 30 пикселей, чтобы фото отделилось от текста. */
        }
      
        .project__card {
          flex: 0 0 calc(50% - 15px); /* Карточки проектов занимают примерно половину ширины, минус 15 пикселей на отступы между ними. */
        }
      
        .skills__container {
          flex-direction: column; /* Контейнер с навыками тоже перестраивается в колонку. */
        }
      
        .skills__column {
          flex: 0 0 100%; /* Каждый столбец с навыками теперь занимает всю доступную ширину. */
          margin-bottom: 30px; /* Добавляем нижний отступ между столбцами навыков. */
        }
      
        .footer__content {
          flex-direction: column; /* Содержимое подвала также переходит на отображение в столбик. */
        }
      }
      
      @media (max-width: 768px) {
        /* Этот блок стилей для экранов шириной 768 пикселей и меньше. Обычно это портретная ориентация планшетов. */
        .header__inner {
          flex-direction: column; /* Внутреннее содержимое шапки (лого и навигация) становится колонкой. */
          gap: 15px; /* Добавляем расстояние между элементами в шапке. */
        }
      
        .logo {
          margin-bottom: 10px; /* Добавляем отступ снизу от логотипа. */
        }
      
        .section__title {
          font-size: 2rem; /* Уменьшаем размер заголовков секций, чтобы лучше помещались на экранах поменьше. */
        }
      
        .project__card {
          flex: 0 0 100%; /* Теперь карточки проектов занимают всю ширину экрана. */
        }
      
        .nav__list {
          justify-content: center; /* Навигационные ссылки выравниваются по центру. */
          flex-wrap: wrap; /* Если ссылки не помещаются в одну строку, они переносятся на следующую. */
        }
      }
      
      @media (max-width: 480px) {
        /* Стили для самых маленьких экранов, например, смартфонов. */
        .about__text {
          font-size: 1rem; /* Еще немного уменьшаем размер текста в секции "О себе". */
        }
      
        .section {
          padding: 60px 0; /* Уменьшаем вертикальные отступы у секций. */
        }
      
        .section__title {
          font-size: 1.8rem; /* Еще уменьшаем размер заголовков секций. */
          margin-bottom: 30px; /* Уменьшаем нижний отступ у заголовков. */
        }
      
        .nav__link {
          padding: 6px 10px; /* Уменьшаем внутренние отступы у навигационных ссылок. */
          font-size: 0.8rem; /* Уменьшаем размер шрифта навигационных ссылок. */
        }
      
        .contact__item {
          font-size: 0.95rem; /* Уменьшаем размер шрифта элементов контакта. */
        }
      }
      
      /* Анимация элементов при прокрутке */
      .animate-on-scroll {
        opacity: 0; /* По умолчанию элементы скрыты (прозрачность 0). */
        transform: translateY(30px); /* И немного сдвинуты вниз на 30 пикселей. */
        transition: opacity 0.8s ease, transform 0.8s ease; /* Плавный переход прозрачности и сдвига при появлении. */
      }
      
      .animate-on-scroll.animate {
        opacity: 1; /* Когда к элементу добавляется класс "animate", он становится полностью видимым. */
        transform: translateY(0); /* И возвращается на свое обычное место. */
      }
      
      /* Стили для темной/светлой темы */
      .theme-toggle {
        position: fixed; /* Кнопка переключения темы всегда остается на одном и том же месте на экране, даже при прокрутке. */
        bottom: 20px; /* Отступ от нижнего края экрана. */
        right: 20px; /* Отступ от правого края экрана. */
        width: 50px; /* Ширина кнопки. */
        height: 50px; /* Высота кнопки. */
        border-radius: 50%; /* Делает кнопку круглой. */
        background-color: var(--accent-color); /* Цвет фона кнопки берется из переменной акцентного цвета. */
        display: flex; /* Используем flexbox для центрирования иконки внутри кнопки. */
        align-items: center; /* Выравниваем элементы по вертикали по центру. */
        justify-content: center; /* Выравниваем элементы по горизонтали по центру. */
        cursor: pointer; /* Меняем курсор мышки на "указатель", чтобы показать, что элемент кликабельный. */
        z-index: 999; /* Помещаем кнопку над всеми остальными элементами на странице. */
        box-shadow: 0 0 20px rgba(79, 120, 254, 0.4); /* Добавляем тень вокруг кнопки. */
        transition: all 0.5s; /* Плавный переход всех изменений (например, при наведении). */
      }
      
      .theme-toggle:hover {
        transform: rotate(180deg); /* При наведении кнопка поворачивается на 180 градусов. */
        background-color: var(--accent-color-hover); /* Меняем цвет фона кнопки на цвет акцента при наведении. */
      }
      
      .theme-toggle svg {
        width: 24px; /* Ширина SVG-иконки внутри кнопки. */
        height: 24px; /* Высота SVG-иконки. */
        color: var(--bg-color); /* Цвет иконки - цвет фона (чтобы она была видна на акцентном фоне). */
      }
      
      /* Стили для светлой темы */
      body.light-theme {
        /* Когда к тегу <body> добавляется класс "light-theme", применяются вот эти стили, переопределяя значения переменных. */
        --bg-color: #f5f7fa; /* Светлый цвет фона. */
        --bg-color-light: #e9ecf2; /* Еще один светлый цвет фона, немного темнее. */
        --bg-color-lighter: #ffffff; /* Самый светлый цвет фона (белый). */
        --text-color: #2a3047; /* Темный цвет текста для светлого фона. */
        --text-color-muted: #5a6382; /* Более темный приглушенный цвет текста. */
      }
      
      /* Стили для скроллбара */
      ::-webkit-scrollbar {
        /* Это специальные стили для браузеров на движке WebKit (например, Chrome и Safari), чтобы настроить внешний вид полосы прокрутки. */
        width: 10px; /* Устанавливаем ширину полосы прокрутки. */
      }
      
      ::-webkit-scrollbar-track {
        /* Стиль для "дорожки" полосы прокрутки (фон). */
        background: var(--bg-color); /* Используем цвет фона сайта. */
      }
      
      ::-webkit-scrollbar-thumb {
        /* Стиль для "бегунка" полосы прокрутки (тот элемент, который вы перетаскиваете). */
        background: var(--accent-color); /* Используем акцентный цвет. */
        border-radius: 5px; /* Скругляем уголки бегунка. */
      }
      
      ::-webkit-scrollbar-thumb:hover {
        /* Стиль для бегунка при наведении мышки. */
        background: var(--accent-color-hover); /* Меняем цвет на цвет акцента при наведении. */
      }
      
      /* Стили для темной темы */
      body {
        /* Это стили по умолчанию для тега <body>, которые задают внешний вид сайта в темной теме. */
        --bg-color: #0f1116;
        --bg-color-light: #141824;
        --bg-color-lighter: #1a1f2e;
        --text-color: #e1e7ff;
        --text-color-muted: #a0a8c7;
        --accent-color: #4f78fe;
        --accent-color-hover: #637dfd;
        --border-radius: 8px;
      }
      
      @keyframes fadeIn {
        /* Это правило описывает анимацию плавного появления элемента. */
        from { opacity: 0; transform: translateY(20px); } /* В начале анимации элемент полностью прозрачный и сдвинут вниз на 20 пикселей. */
        to { opacity: 1; transform: translateY(0); } /* В конце анимации элемент полностью виден и находится на своем обычном месте. */
      }
      
      @keyframes glowPulse {
        /* Анимация пульсирующей тени. */
        0% { box-shadow: 0 0 10px rgba(79, 120, 254, 0.2); } /* В начале тень маленькая и не очень яркая. */
        50% { box-shadow: 0 0 20px rgba(79, 120, 254, 0.4); } /* В середине тень становится больше и ярче. */
        100% { box-shadow: 0 0 10px rgba(79, 120, 254, 0.2); } /* В конце тень возвращается к исходному состоянию. */
      }
      
      @keyframes borderGlow {
        /* Анимация пульсирующего цвета границы. */
        0% { border-color: var(--accent-color); } /* В начале цвет границы - акцентный цвет. */
        50% { border-color: var(--accent-color-hover); } /* В середине цвет границы меняется на цвет акцента при наведении. */
        100% { border-color: var(--accent-color); } /* В конце цвет границы снова становится акцентным. */
      }
      
      @keyframes typingCursor {
        /* Анимация мигающего курсора при наборе текста (может использоваться в JavaScript). */
        0%, 100% { border-right-color: transparent; } /* В начале и конце курсор прозрачный. */
        50% { border-right-color: var(--accent-color); } /* В середине курсор становится акцентного цвета. */
      }
      
      /* Общие стили для всех элементов */
      * {
        margin: 0; /* Убираем все внешние отступы у всех элементов. */
        padding: 0; /* Убираем все внутренние отступы у всех элементов. */
        box-sizing: border-box; /* Говорим браузеру, чтобы ширина и высота элемента включали в себя внутренние отступы и границы. Это упрощает расчет размеров. */
        transition: all 0.3s ease; /* Добавляем плавный переход для всех свойств, которые могут меняться (например, цвет, размер и т.д.). */
      }
      
      /* Стиль для тега <body> */
      body {
        font-family: 'Roboto', sans-serif; /* Устанавливаем шрифт для всего сайта. Если Roboto не найдется, будет использоваться любой шрифт без засечек (sans-serif). */
        line-height: 1.6; /* Межстрочный интервал для лучшей читаемости текста. */
        color: var(--text-color); /* Цвет текста берется из переменной. */
        background-color: var(--bg-color); /* Цвет фона берется из переменной. */
        overflow-x: hidden; /* Запрещаем появление горизонтальной полосы прокрутки, если что-то случайно выйдет за пределы экрана по ширине. */
      }
      
      /* Стиль для ссылок */
      a {
        text-decoration: none; /* Убираем подчеркивание у ссылок. */
        color: inherit; /* Наследуем цвет текста от родительского элемента. */
      }
      
      /* Стиль для неупорядоченных списков */
      ul {
        list-style: none; /* Убираем маркеры (точки) у списков. */
      }
      
      /* Стиль для контейнера */
      .container {
        max-width: 1200px; /* Максимальная ширина контейнера, чтобы контент не растягивался на всю ширину больших экранов. */
        margin: 0 auto; /* Центрируем контейнер по горизонтали. */
        padding: 0 15px; /* Добавляем небольшие отступы по бокам, чтобы контент не прилипал к краям экрана. */
      }
      
      /* Стиль для секций */
      .section {
        padding: 80px 0; /* Задаем вертикальные отступы сверху и снизу секции. */
        opacity: 0; /* Сначала делаем секцию невидимой. */
        transform: translateY(20px); /* И немного сдвигаем вниз. */
        animation: fadeIn 0.8s forwards; /* Запускаем анимацию плавного появления при загрузке страницы. */
      }
      
      /* Стиль для светлой секции */
      .section--light {
        background-color: var(--bg-color-light); /* Задаем более светлый фон для этой секции, используя переменную. */
      }
      
      /* Стиль для заголовков секций */
      .section__title {
        font-family: 'JetBrains Mono', monospace; /* Используем другой шрифт для заголовков. */
        font-size: 2.5rem; /* Большой размер шрифта для заголовков. */
        color: var(--text-color); /* Цвет текста заголовка. */
        text-align: center; /* Выравниваем заголовок по центру. */
        margin-bottom: 50px; /* Добавляем отступ снизу от заголовка до следующего элемента. */
        position: relative; /* Делаем позиционирование относительным, чтобы можно было спозиционировать псевдоэлемент ::after. */
      }
      
      .section__title::after {
        /* Создаем декоративную линию под заголовком. */
        content: ''; /* Обязательное свойство для псевдоэлемента. */
        display: block; /* Делаем элемент блочным, чтобы он занимал всю доступную ширину (но мы зададим конкретную ширину ниже). */
        width: 80px; /* Ширина линии. */
        height: 4px; /* Высота линии. */
        background-color: var(--accent-color); /* Цвет линии - акцентный цвет. */
        margin: 15px auto 0; /* Отступ сверху, автоматические отступы по бокам (для центрирования), нет отступа снизу. */
        border-radius: 2px; /* Скругляем уголки линии. */
        animation: glowPulse 2s infinite; /* Запускаем анимацию пульсации для линии. */
      }
      
      /* Стиль для выделенного текста */
      .highlight {
        color: var(--accent-color); /* Цвет выделенного текста - акцентный цвет. */
        position: relative; /* Нужно для возможности добавления стилей, если потребуется. */
      }
      
      /* Стиль для кнопок */
      .button {
        display: inline-block; /* Делаем кнопку строчно-блочным элементом, чтобы она занимала необходимую ширину, но могла находиться в строке с другими элементами. */
        padding: 12px 25px; /* Внутренние отступы сверху/снизу и слева/справа. */
        background-color: transparent; /* Делаем фон кнопки прозрачным. */
        border: 2px solid var(--accent-color); /* Задаем границу вокруг кнопки: толщина 2 пикселя, сплошная, цвет - акцентный. */
        border-radius: var(--border-radius); /* Скругляем уголки кнопки. */
        color: var(--accent-color); /* Цвет текста кнопки - акцентный цвет. */
        font-family: 'JetBrains Mono', monospace; /* Используем тот же шрифт, что и для заголовков. */
        font-weight: 700; /* Делаем текст кнопки жирным. */
        text-transform: uppercase; /* Преобразуем весь текст в заглавные буквы. */
        font-size: 0.9rem; /* Размер шрифта кнопки. */
        letter-spacing: 1px; /* Расстояние между буквами. */
        transition: all 0.3s, box-shadow 0.5s; /* Плавный переход для всех свойств и для тени (с немного другой скоростью). */
        cursor: pointer; /* Меняем курсор на "указатель" при наведении. */
        position: relative; /* Нужно для позиционирования псевдоэлемента ::before. */
        overflow: hidden; /* Скрываем все, что выходит за границы элемента (например, анимацию псевдоэлемента). */
        z-index: 1; /* Устанавливаем z-index, чтобы псевдоэлемент ::before был позади текста. */
      }
      
      .button::before {
        /* Создаем псевдоэлемент, который будет использоваться для эффекта при наведении. */
        content: ''; /* Обязательное свойство. */
        position: absolute; /* Абсолютное позиционирование относительно родительского элемента (.button). */
        top: 0; /* Прижимаем к верхнему краю. */
        left: 0; /* Прижимаем к левому краю. */
        width: 0%; /* Изначально ширина 0. */
        height: 100%; /* Высота равна высоте кнопки. */
        background-color: var(--accent-color); /* Цвет фона - акцентный. */
        transition: all 0.3s; /* Плавный переход для изменения ширины. */
        z-index: -1; /* Помещаем этот элемент позади основного содержимого кнопки. */
      }
      
      .button:hover {
        /* Стиль при наведении на кнопку. */
        color: var(--bg-color); /* Цвет текста меняется на цвет фона. */
        box-shadow: 0 0 20px rgba(79, 120, 254, 0.5); /* Добавляем тень. */
      }
      
      .button:hover::before {
        /* При наведении увеличиваем ширину псевдоэлемента. */
        width: 100%; /* Теперь он заполняет всю кнопку. */
      }
      
      /* Стили для шапки */
      .header {
        background-color: rgba(15, 17, 22, 0.95); /* Полупрозрачный темный фон для шапки. */
        padding: 20px 0; /* Вертикальные отступы. */
        position: fixed; /* Фиксируем шапку вверху экрана, чтобы она оставалась видна при прокрутке. */
        width: 100%; /* Шапка занимает всю ширину экрана. */
        top: 0; /* Прижимаем к верхнему краю экрана. */
        z-index: 1000; /* Помещаем шапку над всем остальным контентом. */
        backdrop-filter: blur(10px); /* Добавляем эффект размытия фона под шапкой (если поддерживается браузером). */
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.2); /* Добавляем небольшую тень снизу шапки. */
      }
    
      header.light {
        /* Стиль для шапки в светлой теме. */
        background-color: rgba(181, 200, 249, 0.95); /* Полупрозрачный светлый фон. */
        padding: 20px 0;
        position: fixed;
        width: 100%;
        top: 0;
        z-index: 1000;
        backdrop-filter: blur(10px);
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.2);
      }
      
      .header__inner {
        /* Контейнер для содержимого шапки (лого и навигация). */
        display: flex; /* Используем flexbox для выравнивания элементов. */
        justify-content: space-between; /* Размещаем элементы по краям контейнера (лого слева, навигация справа). */
        align-items: center; /* Выравниваем элементы по вертикали по центру. */
      }
      
      .logo__text {
        /* Стиль для текстового логотипа. */
        color: var(--text-color); /* Цвет текста логотипа. */
        font-family: 'JetBrains Mono', monospace; /* Используем тот же шрифт, что и для заголовков. */
        font-weight: 700; /* Делаем текст жирным. */
        font-size: 1.8rem; /* Размер шрифта логотипа. */
        letter-spacing: 1px; /* Расстояние между буквами. */
      }
      
      .nav__list {
        /* Стиль для списка навигационных ссылок. */
        display: flex; /* Используем flexbox для размещения ссылок в ряд. */
        gap: 20px; /* Расстояние между ссылками. */
      }
      
      .nav__link {
        /* Стиль для каждой навигационной ссылки. */
        color: var(--text-color-muted); /* Изначальный цвет текста ссылки - приглушенный. */
        font-weight: 500; /* Делаем текст немного жирнее. */
        padding: 8px 15px; /* Внутренние отступы. */
        border-radius: var(--border-radius); /* Скругляем уголки. */
        transition: all 0.3s; /* Плавный переход для всех изменений. */
        font-family: 'JetBrains Mono', monospace; /* Используем тот же шрифт. */
        font-size: 0.9rem; /* Размер шрифта ссылки. */
        letter-spacing: 0.5px; /* Небольшое расстояние между буквами. */
        position: relative; /* Нужно для создания эффекта подчеркивания при наведении. */
      }
      
      .nav__link::after {
        /* Создаем псевдоэлемент для подчеркивания при наведении. */
        content: ''; /* Обязательное свойство. */
        position: absolute; /* Абсолютное позиционирование относительно ссылки. */
        bottom: 0; /* Прижимаем к нижнему краю. */
        left: 50%; /* Начинаем с середины. */
        width: 0; /* Изначально ширина 0. */
        height: 2px; /* Толщина линии подчеркивания. */
        background-color: var(--accent-color); /* Цвет подчеркивания - акцентный. */
        transition: all 0.3s; /* Плавный переход для изменения ширины. */
        transform: translateX(-50%); /* Сдвигаем влево на половину ширины, чтобы центрировать. */
      }
      
      .nav__link:hover {
        /* Стиль при наведении на ссылку. */
        color: var(--text-color); /* Цвет текста меняется на основной цвет. */
      }
      
      .nav__link:hover::after {
        /* При наведении увеличиваем ширину подчеркивания. */
        width: 80%; /* Подчеркивание занимает 80% ширины ссылки. */
      }
    
    
    /* Стили для секции О себе */
    .main {
        padding-top: 80px; /* Добавляем верхний отступ, чтобы контент не перекрывался фиксированной шапкой. */
      }
      
      .about__content {
        /* Контейнер для фото и текста в секции "О себе". */
        display: flex; /* Используем flexbox для размещения фото и текста рядом. */
        align-items: center; /* Выравниваем фото и текст по вертикали по центру. */
        gap: 50px; /* Расстояние между фото и текстом. */
      }
      
      .about__photo {
        /* Стиль для фотографии "О себе". */
        flex: 0 0 300px; /* Фото не сжимается и не растягивается, занимает ширину 300 пикселей. */
        width: 300px; /* Явно задаем ширину. */
        height: 300px; /* Явно задаем высоту, чтобы фоновое изображение было видно. */
        position: relative; /* Нужно для позиционирования псевдоэлемента ::after. */
        border-radius: var(--border-radius); /* Скругляем уголки фотографии. */
        overflow: hidden; /* Скрываем все, что выходит за границы элемента. */
        background-image: url('assets/profile-photo.jpg'); /* Устанавливаем фоновое изображение (нужно проверить, что путь правильный!). */
        background-size: cover; /* Масштабируем изображение, чтобы оно полностью покрывало контейнер. */
        background-position: center; /* Центрируем изображение внутри контейнера. */
        transition: background-image 0.5s ease-in-out, filter 0.5s ease-in-out, transform 0.5s ease-in-out; /* Плавный переход при смене изображения, фильтра и трансформации. */
      }
      
      .about__photo::after {
        /* Декоративная рамка вокруг фотографии. */
        content: ''; /* Обязательное свойство. */
        position: absolute; /* Абсолютное позиционирование относительно фотографии. */
        top: 0; /* Прижимаем ко всем краям. */
        left: 0;
        right: 0;
        bottom: 0;
        border: 2px solid var(--accent-color); /* Задаем границу: толщина 2 пикселя, сплошная, цвет - акцентный. */
        border-radius: var(--border-radius); /* Скругляем уголки рамки. */
        animation: borderGlow 3s infinite; /* Запускаем анимацию пульсирующего цвета границы. */
        pointer-events: none; /* Делаем рамку невидимой для событий мыши, чтобы можно было взаимодействовать с фотографией. */
      }
      
      /* Скрываем тег <img> */
      .about__photo .photo {
        display: none; /* Если внутри .about__photo есть тег <img> с классом "photo", мы его скрываем, так как используем фоновое изображение. */
      }
      
      .about__photo:hover {
        /* Стиль при наведении на фотографию. */
        background-image: url('assets/profile-photo-hover.jpg'); /* Меняем фоновое изображение (нужно проверить путь!). */
        filter: grayscale(0%); /* Убираем эффект серости (если он был). */
        transform: scale(1.02); /* Немного увеличиваем масштаб фотографии. */
      }
      
      .about__info {
        /* Контейнер для текстовой информации "О себе". */
        flex: 1; /* Занимает все оставшееся свободное пространство. */
      }
      
      .about__text {
        /* Стиль для основного текста в секции "О себе". */
        margin-bottom: 25px; /* Отступ снизу от параграфа. */
        font-size: 1.1rem; /* Размер шрифта текста. */
        color: var(--text-color-muted); /* Цвет текста - приглушенный. */
        line-height: 1.8; /* Межстрочный интервал. */
      }
      
      /* Стили для секции Проекты */
      .projects__list {
        /* Контейнер для списка проектов. */
        display: flex; /* Используем flexbox для размещения карточек проектов в ряд. */
        flex-wrap: wrap; /* Если карточки не помещаются в одну строку, они переносятся на следующую. */
        gap: 30px; /* Расстояние между карточками проектов. */
        justify-content: center; /* Выравниваем карточки по центру. */
      }
      
      .project__card {
        /* Стиль для каждой карточки проекта. */
        flex: 0 0 calc(33.333% - 20px); /* Каждая карточка занимает примерно треть ширины, минус отступы. */
        background-color: var(--bg-color-lighter); /* Цвет фона карточки. */
        border-radius: var(--border-radius); /* Скругляем уголки. */
        overflow: hidden; /* Скрываем все, что выходит за границы. */
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2); /* Добавляем тень. */
        transition: all 0.5s; /* Плавный переход для всех изменений. */
        position: relative; /* Нужно для создания верхнего цветного бордера при наведении. */
      }
      
      .project__card::before {
        /* Верхняя цветная полоска, которая появляется при наведении. */
        content: ''; /* Обязательное свойство. */
        position: absolute; /* Абсолютное позиционирование относительно карточки. */
        top: 0; /* Прижимаем к верхнему краю. */
        left: 0; /* Прижимаем к левому краю. */
        width: 100%; /* Занимает всю ширину. */
        height: 4px; /* Толщина полоски. */
        background-color: var(--accent-color); /* Цвет полоски - акцентный. */
        transform: scaleX(0); /* Изначально полоска не видна (масштаб по горизонтали 0). */
        transition: transform 0.5s; /* Плавный переход для изменения масштаба. */
        transform-origin: left; /* Анимация масштабирования начинается слева. */
      }
      
      .project__card:hover {
        /* Стиль при наведении на карточку. */
        transform: translateY(-10px); /* Немного поднимаем карточку вверх. */
        box-shadow: 0 15px 30px rgba(0, 0, 0, 0.3), 0 0 15px rgba(79, 120, 254, 0.3); /* Усиливаем тень и добавляем цветную тень. */
      }
      
      .project__card:hover::before {
        /* При наведении показываем верхнюю цветную полоску. */
        transform: scaleX(1); /* Масштабируем по горизонтали до 1 (полностью видна). */
      }
      
      .project__image {
        /* Стиль для изображения проекта. */
        width: 100%; /* Занимает всю ширину карточки. */
        height: 200px; /* Фиксированная высота изображения. */
        object-fit: cover; /* Масштабируем изображение с сохранением пропорций, обрезая лишнее. */
        filter: grayscale(50%); /* Делаем изображение немного серым по умолчанию. */
        transition: all 0.5s; /* Плавный переход для всех изменений. */
      }
      
      .project__card:hover .project__image {
        /* При наведении убираем эффект серости с изображения. */
        filter: grayscale(0%); /* Делаем изображение цветным. */
      }
      
      .project__title {
        /* Стиль для заголовка проекта. */
        padding: 15px 20px 0; /* Внутренние отступы сверху и по бокам. */
        font-family: 'JetBrains Mono', monospace; /* Используем тот же шрифт. */
        color: var(--text-color); /* Цвет текста заголовка. */
        font-size: 1.2rem; /* Размер шрифта. */
      }
      
      .project__description {
        /* Стиль для описания проекта. */
        padding: 10px 20px; /* Внутренние отступы. */
        color: var(--text-color-muted); /* Цвет текста описания - приглушенный. */
      }
      
      .project__link {
        /* Стиль для ссылки "Посмотреть проект". */
        display: inline-block; /* Делаем ссылку строчно-блочной. */
        margin: 0 20px 20px; /* Внешние отступы снизу и по бокам. */
        color: var(--accent-color); /* Цвет ссылки - акцентный. */
        font-weight: 700; /* Делаем текст жирным. */
        font-family: 'JetBrains Mono', monospace; /* Используем тот же шрифт. */
        transition: all 0.3s; /* Плавный переход для всех изменений. */
        position: relative; /* Нужно для создания эффекта стрелочки при наведении. */
      }
      
      .project__link::after {
        /* Стрелочка, которая появляется при наведении на ссылку. */
        content: '→'; /* Сам символ стрелочки. */
        position: relative; /* Относительное позиционирование, чтобы можно было сдвигать стрелочку. */
        top: 0; /* Выравниваем по верху. */
        margin-left: 5px; /* Отступ слева от текста ссылки. */
        opacity: 0; /* Изначально стрелочка не видна. */
        transform: translateX(-10px); /* И немного сдвинута влево. */
        transition: all 0.3s; /* Плавный переход для появления и сдвига. */
      }
      
      .project__link:hover {
        /* Стиль при наведении на ссылку. */
        color: var(--accent-color-hover); /* Меняем цвет на цвет акцента при наведении. */
      }
      
      .project__link:hover::after {
        /* При наведении показываем стрелочку и сдвигаем ее вправо. */
        opacity: 1; /* Делаем видимой. */
        transform: translateX(0); /* Возвращаем на место. */
      }
      
      /* Стили для секции Навыки */
      .skills__container {
        /* Контейнер для колонок с навыками. */
        display: flex; /* Используем flexbox для размещения колонок рядом. */
        gap: 50px; /* Расстояние между колонками. */
        justify-content: center; /* Выравниваем колонки по центру. */
      }
      
      .skills__column {
        /* Стиль для каждой колонки с навыками. */
        flex: 0 0 calc(50% - 25px); /* Каждая колонка занимает примерно половину ширины, минус отступы. */
        background-color: var(--bg-color-lighter); /* Цвет фона колонки. */
        border-radius: var(--border-radius); /* Скругляем уголки. */
        padding: 30px; /* Внутренние отступы. */
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2); /* Добавляем тень. */
        transition: all 0.5s; /* Плавный переход для всех изменений. */
      }
      
      .skills__column:hover {
        /* Стиль при наведении на колонку. */
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3), 0 0 15px rgba(79, 120, 254, 0.2); /* Усиливаем тень и добавляем цветную тень. */
        transform: translateY(-5px); /* Немного поднимаем колонку вверх. */
      }
      
      .skills__subtitle {
        /* Стиль для подзаголовка в колонке навыков (например, "Frontend" или "Backend"). */
        font-family: 'JetBrains Mono', monospace; /* Используем тот же шрифт. */
        color: var(--text-color); /* Цвет текста подзаголовка. */
        margin-bottom: 20px; /* Отступ снизу. */
        text-align: center; /* Выравниваем по центру. */
        font-size: 1.4rem; /* Размер шрифта. */
      }
      
      .skills__list {
        /* Стиль для списка навыков внутри колонки. */
        display: flex; /* Используем flexbox для размещения элементов в колонку. */
        flex-direction: column; /* Размещаем элементы вертикально. */
        gap: 15px; /* Расстояние между элементами списка. */
      }
      
      .skills__item {
        /* Стиль для каждого отдельного навыка в списке. */
        padding: 15px 20px; /* Внутренние отступы. */
        background-color: var(--bg-color); /* Цвет фона элемента. */
        border-radius: var(--border-radius); /* Скругляем уголки. */
        border-left: 4px solid var(--accent-color); /* Добавляем цветную полоску слева. */
        transition: all 0.3s; /* Плавный переход для всех изменений. */
        font-family: 'JetBrains Mono', monospace; /* Используем тот же шрифт. */
        font-size: 0.95rem; /* Размер шрифта. */
        position: relative; /* Нужно для создания эффекта при наведении. */
        overflow: hidden; /* Скрываем все, что выходит за границы. */
        z-index: 1; /* Устанавливаем z-index. */
      }
      
      .skills__item::before {
        /* Эффект подсветки при наведении. */
        content: ''; /* Обязательное свойство. */
        position: absolute; /* Абсолютное позиционирование относительно элемента навыка. */
        left: 0; /* Прижимаем к левому краю. */
        top: 0; /* Прижимаем к верхнему краю. */
        width: 0%; /* Изначально ширина 0. */
        height: 100%; /* Высота равна высоте элемента. */
        background-color: rgba(79, 120, 254, 0.1); /* Полупрозрачный акцентный цвет. */
        transition: all 0.3s; /* Плавный переход для изменения ширины. */
        z-index: -1; /* Помещаем позади текста. */
      }
      
      .skills__item:hover {
        /* Стиль при наведении на элемент навыка. */
        transform: translateX(5px); /* Немного сдвигаем вправо. */
      }
      
      .skills__item:hover::before {
        /* При наведении увеличиваем ширину подсветки. */
        width: 100%; /* Заполняем весь элемент. */
      }
      
      /* Стили для подвала */
      .footer {
        background-color: var(--bg-color-light); /* Цвет фона подвала. */
        padding: 60px 0 30px; /* Внутренние отступы сверху, снизу и еще немного снизу. */
      }
      
      .footer__title {
        /* Стиль для заголовка подвала (может и не быть). */
        color: var(--text-color); /* Цвет текста заголовка. */
      }
      
      .footer__content {
        /* Контейнер для содержимого подвала (контакты и соцсети). */
        display: flex; /* Используем flexbox для размещения элементов рядом. */
        justify-content: space-between; /* Размещаем элементы по краям. */
        gap: 50px; /* Расстояние между блоками контента. */
        margin-bottom: 40px; /* Отступ снизу. */
      }
      
      .contact__info {
        /* Стиль для блока с контактной информацией. */
        flex: 1; /* Занимает доступное пространство. */
      }
      
      .contact__item {
        /* Стиль для каждого элемента контактной информации (например, email, телефон). */
        margin-bottom: 15px; /* Отступ снизу. */
        font-size: 1.1rem; /* Размер шрифта. */
        color: var(--text-color-muted); /* Цвет текста - приглушенный. */
      }
      
      .contact__link {
        /* Стиль для ссылок в контактной информации (например, email). */
        color: var(--accent-color); /* Цвет ссылки - акцентный. */
        transition: all 0.3s; /* Плавный переход для всех изменений. */
        position: relative; /* Нужно для эффекта подчеркивания. */
      }
      
      .contact__link::after {
        /* Подчеркивание при наведении. */
        content: ''; /* Обязательное свойство. */
        position: absolute; /* Абсолютное позиционирование относительно ссылки. */
        bottom: -2px; /* Положение снизу. */
        left: 0; /* Положение слева. */
        width: 0; /* Изначально ширина 0. */
        height: 1px; /* Толщина линии. */
        background-color: var(--accent-color); /* Цвет линии - акцентный. */
        transition: all 0.3s; /* Плавный переход для изменения ширины. */
      }
      
      .contact__link:hover {
        /* Стиль при наведении на ссылку. */
        color: var(--accent-color-hover); /* Меняем цвет на цвет акцента при наведении. */
      }
      
      .contact__link:hover::after {
        /* При наведении увеличиваем ширину подчеркивания. */
        width: 100%; /* Заполняем всю ширину ссылки. */
      }
      
      .social {
        /* Стиль для блока с социальными ссылками. */
        flex: 1; /* Занимает доступное пространство. */
      }
      
      .social__title {
        /* Стиль для заголовка блока социальных ссылок. */
        font-family: 'JetBrains Mono', monospace; /* Используем тот же шрифт. */
        margin-bottom: 20px; /* Отступ снизу. */
        color: var(--text-color); /* Цвет текста заголовка. */
        font-size: 1.4rem; /* Размер шрифта. */
      }
      
      .social__links {
        /* Контейнер для списка социальных ссылок. */
        display: flex; /* Используем flexbox для размещения ссылок рядом. */
        gap: 15px; /* Расстояние между ссылками. */
        flex-wrap: wrap; /* Если ссылки не помещаются, переносим на следующую строку. */
      }
      
      .social__link {
        /* Стиль для каждой социальной ссылки. */
        display: flex; /* Используем flexbox для выравнивания иконки и текста. */
        align-items: center; /* Выравниваем по вертикали по центру. */
        gap: 8px; /* Расстояние между иконкой и текстом. */
        padding: 10px 15px; /* Внутренние отступы. */
        background-color: var(--bg-color-lighter); /* Цвет фона ссылки. */
        border-radius: var(--border-radius); /* Скругляем уголки. */
        color: var(--text-color-muted); /* Цвет текста - приглушенный. */
        transition: all 0.3s; /* Плавный переход для всех изменений. */
      }
      
      .social__link:hover {
        /* Стиль при наведении на социальную ссылку. */
        background-color: var(--accent-color); /* Меняем цвет фона на акцентный. */
        color: var(--bg-color); /* Цвет текста меняется на цвет фона. */
        transform: translateY(-5px); /* Немного поднимаем ссылку вверх. */
        box-shadow: 0 10px 20px rgba(79, 120, 254, 0.3); /* Добавляем цветную тень. */
      }
      
      .social__icon {
        /* Стиль для иконки социальной сети. */
        display: inline-flex; /* Делаем строчно-блочным flex-контейнером. */
        align-items: center; /* Выравниваем по вертикали по центру. */
        justify-content: center; /* Выравниваем по горизонтали по центру. */
      }
      
      .copyright {
        /* Стиль для текста копирайта в подвале. */
        text-align: center; /* Выравниваем по центру. */
        margin-top: 30px; /* Отступ сверху. */
        padding-top: 20px; /* Внутренний отступ сверху. */
        border-top: 1px solid rgba(160, 168, 199, 0.1); /* Добавляем тонкую серую линию сверху. */
        color: var(--text-color-muted); /* Добавлен цвет для текста copyright - делаем его приглушенным. */
      }